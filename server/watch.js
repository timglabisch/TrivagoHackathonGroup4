// Generated by CoffeeScript 1.7.1
(function() {
  var main, notify, socket, watch;

  socket = io();

  notify = (function() {
    function notify(headline, txt, cb) {
      this.headline = headline;
      this.txt = txt;
      this.cb = cb;
      this.dom = null;
    }

    notify.prototype.getDom = function() {
      if (this.dom) {
        return this.dom;
      }
      this.dom = $("<div class=\"notify\">\n    <div class=\"headline\">" + this.headline + "</div>\n<div class=\"txt\">" + this.txt + "    </div>\n</div>");
      return this.dom;
    };

    notify.prototype.triggerCb = function(cbName) {
      console.log("trigger" + cbName);
      return this.cb[cbName]();
    };

    return notify;

  })();

  watch = (function() {
    function watch(dom) {
      this.dom = dom;
      this.notify = null;
    }

    watch.prototype.setNotify = function(notify) {
      this.notify = notify;
      return this.dom.html(this.notify.getDom());
    };

    return watch;

  })();

  main = (function() {
    function main(dom) {
      this.dom = dom;
      this.watch = new watch(this.dom.find('.notifyWrapper'));
      this.dom.click((function(_this) {
        return function() {
          var _ref;
          return (_ref = _this.watch.notify) != null ? _ref.triggerCb('click') : void 0;
        };
      })(this));
      this.socket = null;
    }

    main.prototype.provideGeo = function(cb) {
      if (!navigator.geolocation) {
        throw "cant get geolocation";
      }
      return navigator.geolocation.getCurrentPosition(function(pos) {
        return cb({
          lat: pos.coords.latitude,
          long: pos.coords.latitude
        });
      });
    };

    main.prototype.onGetOffer = function(data) {
      return console.log(data);
    };

    main.prototype.run = function() {
      this.watch.setNotify(new notify("Bitte warten", "Geodaten werden <br/> abgerufen", {
        click: function() {
          return console.log("click wait");
        }
      }));
      return this.provideGeo((function(_this) {
        return function(coords) {
          socket.emit("position", JSON.stringify(coords));
          return socket.on('offer', _this.onGetOffer.bind(_this));
        };
      })(this));
    };

    return main;

  })();

  $(document).ready(function() {
    return (new main($('.main'))).run();
  });

}).call(this);
